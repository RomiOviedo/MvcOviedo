@model IPagedList<SizeListVm>
@using X.PagedList
@using X.PagedList.Extensions
@{
    ViewData["Title"] = "Size List";
}
<div class="container">
    <div class="row mb-3">
        <div class="col-6">
            <h3>Size List</h3>
        </div>
        <div class="col-6 text-end">
            <a asp-controller="Size" asp-action="UpSert" class="btn btn-primary">
                <i class="bi bi-plus-circle"></i>
                Nuevo
            </a>
        </div>
    </div>
    <table class="table table-bordered table-hover">
        <thead>
            <tr>
                <th style="width:45%">Size</th>
                <th style="width:35%">Actions</th>
            </tr>
        </thead>
        <tbody>
            @if (Model.Any())
            {
                foreach (var item in Model)
                {
                    <tr id="@item.SizeId">
                        <td>@item.SizeNumber</td>
                        <td>
                            <a class="btn btn-warning" asp-controller="Size" asp-action="UpSert" asp-route-id="@item.SizeId">
                                <i class="bi bi-pencil-square"></i>&nbsp;Edit
                            </a>
                            <!-- Botón de eliminar que invoca el SweetAlert -->
                            <button class="btn btn-danger" onclick="confirmDelete('@item.SizeId')">
                                <i class="bi bi-trash-fill"></i>&nbsp; Delete
                            </button>
                        </td>
                    </tr>
                }
            }
            else
            {
                <tr>
                    <td colspan="2" class="text-center">
                        No Sizes added yet!
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <!-- Controles de paginación manual -->
    <div class="d-flex justify-content-center">
        <nav aria-label="Page navigation">
            <ul class="pagination">
                <!-- Botón Anterior -->
                <li class="page-item @(Model.HasPreviousPage ? "" : "disabled")">
                    <a class="page-link" asp-action="Index" asp-route-page="@(Model.PageNumber - 1)">Previous</a>
                </li>

                <!-- Números de página -->
                @for (int i = 1; i <= Model.PageCount; i++)
                {
                    <li class="page-item @(Model.PageNumber == i ? "active" : "")">
                        <a class="page-link" asp-action="Index" asp-route-page="@i">@i</a>
                    </li>
                }

                <!-- Botón Siguiente -->
                <li class="page-item @(Model.HasNextPage ? "" : "disabled")">
                    <a class="page-link" asp-action="Index" asp-route-page="@(Model.PageNumber + 1)">Next</a>
                </li>
            </ul>
        </nav>
    </div>
</div>

@section Scripts {
    <script src="~/lib/jquery/dist/jquery.js"></script>
    <script src="//cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script type="text/javascript">
        function confirmDelete(SizeId) {
            Swal.fire({
                title: 'Are you sure?',
                text: 'You will not be able to recover this record!',
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, delete it!',
                cancelButtonText: 'No, cancel!'
            }).then((result) => {
                if (result.isConfirmed) {
                    // Si el usuario confirma, se envía el formulario para eliminar el registro
                    $.ajax({
                        url: '/Size/Delete/' + SizeId,
                        type: 'POST',
                        success: function (data) {
                            if (data.success) {
                                Swal.fire('Deleted!', 'The record has been deleted.', 'success');
                                document.getElementById(SizeId).remove(); // Eliminar la fila de la tabla
                            } else {
                                Swal.fire('Error!', data.message, 'error');
                            }
                        },
                        error: function () {
                            Swal.fire('Error!', 'There was an error deleting the record.', 'error');
                        }
                    });
                }
            });
        }
    </script>
}

